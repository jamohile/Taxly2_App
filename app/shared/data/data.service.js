"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var http_1 = require("@angular/http");
var config_1 = require("../config");
var datayear_1 = require("../data/datayear/datayear");
var DataService = DataService_1 = (function () {
    function DataService(http) {
        this.http = http;
    }
    DataService.prototype.load = function (year, successful) {
        var headers = new http_1.Headers();
        headers.append('auth_token', config_1.Config.token);
        this.http.get(config_1.Config.url + "data/" + year, { headers: headers }).toPromise().then(function (response) {
            var dataYear = new datayear_1.DataYear(response._body.year, response._body.fields, response._body.months);
            successful(dataYear);
        });
    };
    DataService.prototype.save = function (successful) {
        var headers = new http_1.Headers();
        headers.append('auth_token', config_1.Config.token);
        headers.append('mode', 'update');
        this.http.post(config_1.Config.url + "data/" + DataService_1.dataYear.year, DataService_1.dataYear, { headers: headers }).toPromise().then(function (response) {
            successful();
        });
    };
    DataService.prototype.addMonth = function (newDataMonth) {
        this.removeDuplicateMonth(newDataMonth.month);
        DataService_1.dataYear.months.push(newDataMonth);
    };
    DataService.prototype.removeDuplicateMonth = function (month) {
        DataService_1.dataYear.months.forEach(function (dataMonth) {
            if (dataMonth.month == month) {
                DataService_1.dataYear.months.splice(DataService_1.dataYear.months.indexOf(dataMonth), 1);
                return;
            }
        });
    };
    DataService.prototype.setYearForTransport = function (dataYear) {
        DataService_1.dataYear = dataYear;
    };
    DataService.prototype.getYearFromTransport = function () {
        return DataService_1.dataYear;
    };
    return DataService;
}());
DataService = DataService_1 = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], DataService);
exports.DataService = DataService;
var DataService_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZGF0YS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJDO0FBQzNDLHNDQUF3RDtBQUl4RCxvQ0FBbUM7QUFDbkMsc0RBQXFEO0FBS3JELElBQWEsV0FBVztJQUdwQixxQkFBb0IsSUFBVTtRQUFWLFNBQUksR0FBSixJQUFJLENBQU07SUFBSSxDQUFDO0lBQ25DLDBCQUFJLEdBQUosVUFBSyxJQUFZLEVBQUUsVUFBd0M7UUFDdkQsSUFBSSxPQUFPLEdBQUcsSUFBSSxjQUFPLEVBQUUsQ0FBQztRQUM1QixPQUFPLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxlQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQ1QsZUFBTSxDQUFDLEdBQUcsR0FBRyxPQUFPLEdBQUcsSUFBSSxFQUMzQixFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsQ0FDdkIsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBQyxRQUFhO1lBQzdCLElBQUksUUFBUSxHQUFhLElBQUksbUJBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3pHLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN6QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCwwQkFBSSxHQUFKLFVBQUssVUFBc0I7UUFDdkIsSUFBSSxPQUFPLEdBQUcsSUFBSSxjQUFPLEVBQUUsQ0FBQztRQUM1QixPQUFPLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxlQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0MsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQ1YsZUFBTSxDQUFDLEdBQUcsR0FBRyxPQUFPLEdBQUcsYUFBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQ2hELGFBQVcsQ0FBQyxRQUFRLEVBQ3BCLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxDQUN2QixDQUFDLFNBQVMsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFDLFFBQWtCO1lBQ2xDLFVBQVUsRUFBRSxDQUFDO1FBQ2pCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNELDhCQUFRLEdBQVIsVUFBUyxZQUF1QjtRQUM1QixJQUFJLENBQUMsb0JBQW9CLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlDLGFBQVcsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBQ0QsMENBQW9CLEdBQXBCLFVBQXFCLEtBQWE7UUFDOUIsYUFBVyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFVBQUMsU0FBb0I7WUFDckQsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUMzQixhQUFXLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsYUFBVyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUN0RixNQUFNLENBQUM7WUFDWCxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBQ0QseUNBQW1CLEdBQW5CLFVBQW9CLFFBQWtCO1FBQ2xDLGFBQVcsQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQ3BDLENBQUM7SUFDRCwwQ0FBb0IsR0FBcEI7UUFDSSxNQUFNLENBQUMsYUFBVyxDQUFDLFFBQVEsQ0FBQztJQUNoQyxDQUFDO0lBQ0wsa0JBQUM7QUFBRCxDQUFDLEFBN0NELElBNkNDO0FBN0NZLFdBQVc7SUFGdkIsaUJBQVUsRUFBRTtxQ0FLaUIsV0FBSTtHQUhyQixXQUFXLENBNkN2QjtBQTdDWSxrQ0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBIdHRwLCBIZWFkZXJzLCBSZXNwb25zZSB9IGZyb20gXCJAYW5ndWxhci9odHRwXCI7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqcy9SeFwiO1xyXG5cclxuaW1wb3J0IHsgVXNlciB9IGZyb20gXCIuLi91c2VyL3VzZXJcIjtcclxuaW1wb3J0IHsgQ29uZmlnIH0gZnJvbSBcIi4uL2NvbmZpZ1wiO1xyXG5pbXBvcnQgeyBEYXRhWWVhciB9IGZyb20gXCIuLi9kYXRhL2RhdGF5ZWFyL2RhdGF5ZWFyXCI7XHJcbmltcG9ydCB7IERhdGFNb250aCB9IGZyb20gXCIuLi9kYXRhL2RhdGFtb250aC9kYXRhbW9udGhcIjtcclxuXHJcbkBJbmplY3RhYmxlKClcclxuXHJcbmV4cG9ydCBjbGFzcyBEYXRhU2VydmljZSB7XHJcbiAgICAvL2EgeWVhciBjYW4gYmUgc3RhdGljYWxseSBzYXZlZCwgZm9yIHRyYW5zZmVyIGJldHdlZW4gcGFnZXNcclxuICAgIHN0YXRpYyBkYXRhWWVhcjogRGF0YVllYXI7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHApIHsgfVxyXG4gICAgbG9hZCh5ZWFyOiBudW1iZXIsIHN1Y2Nlc3NmdWw6IChkYXRhWWVhcjogRGF0YVllYXIpID0+IHZvaWQpIHtcclxuICAgICAgICBsZXQgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XHJcbiAgICAgICAgaGVhZGVycy5hcHBlbmQoJ2F1dGhfdG9rZW4nLCBDb25maWcudG9rZW4pO1xyXG4gICAgICAgIHRoaXMuaHR0cC5nZXQoXHJcbiAgICAgICAgICAgIENvbmZpZy51cmwgKyBcImRhdGEvXCIgKyB5ZWFyLFxyXG4gICAgICAgICAgICB7IGhlYWRlcnM6IGhlYWRlcnMgfVxyXG4gICAgICAgICkudG9Qcm9taXNlKCkudGhlbigocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICB2YXIgZGF0YVllYXI6IERhdGFZZWFyID0gbmV3IERhdGFZZWFyKHJlc3BvbnNlLl9ib2R5LnllYXIsIHJlc3BvbnNlLl9ib2R5LmZpZWxkcywgcmVzcG9uc2UuX2JvZHkubW9udGhzKTtcclxuICAgICAgICAgICAgc3VjY2Vzc2Z1bChkYXRhWWVhcik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBzYXZlKHN1Y2Nlc3NmdWw6ICgpID0+IHZvaWQpIHtcclxuICAgICAgICBsZXQgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XHJcbiAgICAgICAgaGVhZGVycy5hcHBlbmQoJ2F1dGhfdG9rZW4nLCBDb25maWcudG9rZW4pO1xyXG4gICAgICAgIGhlYWRlcnMuYXBwZW5kKCdtb2RlJywgJ3VwZGF0ZScpO1xyXG4gICAgICAgIHRoaXMuaHR0cC5wb3N0KFxyXG4gICAgICAgICAgICBDb25maWcudXJsICsgXCJkYXRhL1wiICsgRGF0YVNlcnZpY2UuZGF0YVllYXIueWVhcixcclxuICAgICAgICAgICAgRGF0YVNlcnZpY2UuZGF0YVllYXIsXHJcbiAgICAgICAgICAgIHsgaGVhZGVyczogaGVhZGVycyB9XHJcbiAgICAgICAgKS50b1Byb21pc2UoKS50aGVuKChyZXNwb25zZTogUmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgc3VjY2Vzc2Z1bCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgYWRkTW9udGgobmV3RGF0YU1vbnRoOiBEYXRhTW9udGgpIHtcclxuICAgICAgICB0aGlzLnJlbW92ZUR1cGxpY2F0ZU1vbnRoKG5ld0RhdGFNb250aC5tb250aCk7XHJcbiAgICAgICAgRGF0YVNlcnZpY2UuZGF0YVllYXIubW9udGhzLnB1c2gobmV3RGF0YU1vbnRoKTtcclxuICAgIH1cclxuICAgIHJlbW92ZUR1cGxpY2F0ZU1vbnRoKG1vbnRoOiBzdHJpbmcpIHtcclxuICAgICAgICBEYXRhU2VydmljZS5kYXRhWWVhci5tb250aHMuZm9yRWFjaCgoZGF0YU1vbnRoOiBEYXRhTW9udGgpID0+IHtcclxuICAgICAgICAgICAgaWYgKGRhdGFNb250aC5tb250aCA9PSBtb250aCkge1xyXG4gICAgICAgICAgICAgICAgRGF0YVNlcnZpY2UuZGF0YVllYXIubW9udGhzLnNwbGljZShEYXRhU2VydmljZS5kYXRhWWVhci5tb250aHMuaW5kZXhPZihkYXRhTW9udGgpLCAxKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgc2V0WWVhckZvclRyYW5zcG9ydChkYXRhWWVhcjogRGF0YVllYXIpIHtcclxuICAgICAgICBEYXRhU2VydmljZS5kYXRhWWVhciA9IGRhdGFZZWFyO1xyXG4gICAgfVxyXG4gICAgZ2V0WWVhckZyb21UcmFuc3BvcnQoKTogRGF0YVllYXIge1xyXG4gICAgICAgIHJldHVybiBEYXRhU2VydmljZS5kYXRhWWVhcjtcclxuICAgIH1cclxufSJdfQ==